<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xyz66.mapper.LinkMapper">

    <resultMap type="com.xyz66.domain.entity.Link" id="LinkMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="logo" column="logo" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into sg_blog.sg_link(name, logo, description, address, status, create_by, create_time, update_by,
        update_time, del_flag)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.logo}, #{entity.description}, #{entity.address}, #{entity.status},
            #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.delFlag})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into sg_blog.sg_link(name, logo, description, address, status, create_by, create_time, update_by,
        update_time, del_flag)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.logo}, #{entity.description}, #{entity.address}, #{entity.status},
            #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.delFlag})
        </foreach>
        on duplicate key update
        name = values(name) , logo = values(logo) , description = values(description) , address = values(address) ,
        status = values(status) , create_by = values(create_by) , create_time = values(create_time) , update_by =
        values(update_by) , update_time = values(update_time) , del_flag = values(del_flag)
    </insert>

</mapper>

